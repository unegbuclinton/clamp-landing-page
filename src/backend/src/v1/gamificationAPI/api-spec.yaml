swagger: '2.0'
info:
  version: '1.0.0'
  title: Gamification API
  description: API documentation for the gamification system, including entities like Game, Score, Round, and Leaderboard.

# Base path and schemes can be adjusted as per actual API implementation
basePath: '/api/v1'
schemes:
  - http

tags:
  - name: Game
    description: Operations related to the Game entity.
  - name: Score
    description: Operations related to the Score entity.
  - name: Round
    description: Operations related to the Round entity.
  - name: Leaderboard
    description: Operations related to the Leaderboard entity.

definitions:
  DraftGame:
    type: object
    description: Represents the draft version of a game with settings for its rounds and winners.
    properties:
      campaignId:
        type: string
        example: 'c12345'
        description: Identifier for the associated campaign.
      roundsDuration:
        type: number
        example: 604800000
        description: Duration of each round in milliseconds.
      numOfRounds:
        type: number
        example: 5
        description: Total number of rounds in the game.
      numOfWinners:
        type: number
        example: 10
        description: Number of winners to be selected in each round.
    required:
      - campaignId
      - roundsDuration
      - numOfRounds
      - numOfWinners

  Game:
    allOF:
      - $ref: '#/definitions/DraftGame'
    type: object
    description: Represents a game with its rounds, status, and related information.
    properties:
      gameId:
        type: string
        example: 'g12345'
      draftGame:
        $ref: '#/definitions/IDraftGame'
      campaignId:
        type: string
        example: 'c12345'
      id:
        type: string
        example: '12345'
    required:
      - gameId
      - draftGame
      - campaignId
      - id

  Score:
    type: object
    description: Represents a score achieved by a user in a particular round of a game.
    properties:
      id:
        type: string
        example: 's12345'
      points:
        type: number
        example: 150
      userId:
        type: string
        example: 'u12345'
      roundId:
        type: string
        example: 'r12345'
    required:
      - id
      - points
      - userId
      - roundId

  Round:
    type: object
    description: Represents a round within a game with its index and related information.
    properties:
      gameId:
        type: string
        example: 'g12345'
      id:
        type: string
        example: 'r12345'
      index:
        type: number
        example: 1
    required:
      - gameId
      - id
      - index

  Leaderboard:
    type: object
    description: Represents a leaderboard for a game showcasing top performers based on a specific statistic.
    properties:
      topN:
        type: number
        example: 10
      roundId:
        type: string
        example: 'r12345'
      game:
        $ref: '#/definitions/Game'
      statKey:
        type: string
        example: 'total_points'
    required:
      - topN
      - roundId
      - game
      - statKey

paths:
  /games:
    get:
      tags:
        - Game
      summary: Get all games
      operationId: getAllGames
      responses:
        200:
          description: List of all games
          schema:
            type: array
            items:
              $ref: '#/definitions/Game'
    post:
      tags:
        - Game
      summary: Create a new game
      operationId: createGame
      parameters:
        - name: game
          in: body
          description: Game object
          required: true
          schema:
            $ref: '#/definitions/DraftGame'
      responses:
        200:
          description: Game created successfully
          schema:
            $ref: '#/definitions/Game'
        400:
          description: Invalid request body
        500:
          description: Internal server error
  /games/{id}:
    get:
      tags:
        - Game
      summary: Get game details by ID
      operationId: getGameById
      parameters:
        - name: id
          in: path
          description: Game ID
          required: true
          type: string
  /games/{id}/rounds/new:
    post:
      tags:
        - Game
      summary: Start a new round for the game
      operationId: nextRound
      parameters:
        - name: id
          in: path
          description: Game ID
          required: true
          type: string
  /games/{id}/start:
    post:
      tags:
        - Game
      summary: Start the game
      operationId: startGame
      parameters:
        - name: id
          in: path
          description: Game ID
          required: true
          type: string
  /games/{id}/end:
    put:
      tags:
        - Game
      summary: End the game
      operationId: endGame
      parameters:
        - name: id
          in: path
          description: Game ID
          required: true
          type: string
  /games/{id}/rounds/end:
    put:
      tags:
        - Game
      summary: End the current round of the game
      operationId: endRound
      parameters:
        - name: id
          in: path
          description: Game ID
          required: true
          type: string

  /periodic-update:
    post:
      tags:
        - Game
      summary: Periodically update game statuses
      operationId: updateGameStatuses

  /user/{userId}:
    get:
      tags:
        - Score
      summary: Get scores for a user
      operationId: getUserScores
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          type: string
      responses:
        200:
          description: List of scores for the user
          schema:
            type: array
            items:
              $ref: '#/definitions/Score'
        404:
          description: No scores found for the user

  /round/{roundId}:
    get:
      tags:
        - Round
      summary: Get round details by ID
      operationId: getRoundById
      parameters:
        - name: roundId
          in: path
          description: Round ID
          required: true
          type: string
      responses:
        200:
          description: Round details
          schema:
            $ref: '#/definitions/Round'
        404:
          description: Round not found

  /rounds:
    get:
      tags:
        - Round
      summary: Get all rounds
      operationId: getAllRounds
      responses:
        200:
          description: List of all rounds
          schema:
            type: array
            items:
              $ref: '#/definitions/Round'
