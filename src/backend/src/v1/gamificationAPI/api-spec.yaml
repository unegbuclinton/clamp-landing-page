openapi: 3.0.0
info:
  version: '1.0.0'
  title: Gamification API
  description: API documentation for the gamification system, including entities like Game, Score, Round, and Leaderboard.
  contact:
    name: S. Omojola
    email: omojolasolomon@gmail.com
servers:
  - url: 'http://localhost:8080/clamp-api/gamification'
  - url: 'https://clamp-service-g76glnnspa-ez.a.run.app/clamp-api/gamification'
schemes:
  - http
tags:
  - name: Game
    description: Operations related to the Game entity.
  - name: Score
    description: Operations related to the Score entity.
  - name: Round
    description: Operations related to the Round entity.
  - name: Leaderboard
    description: Operations related to the Leaderboard entity.

components:
  schemas:
    GameStatus:
      type: string
      enum:
        - draft
        - started
        - paused
        - stopped
      description: Represents the status of a game.
    DraftGame:
      type: object
      description: Represents the draft version of a game with settings for its rounds and winners.
      properties:
        campaignId:
          type: string
          example: 'c12345'
          description: Identifier for the associated campaign.
        roundsDuration:
          type: number
          example: 604800000
          description: Duration of each round in milliseconds.
        numOfRounds:
          type: number
          example: 5
          description: Total number of rounds in the game.
        numOfWinners:
          type: number
          example: 10
          description: Number of winners to be selected in each round.
        winningCriteriaCode:
          type: string
          example: 'h_growth_trxn_amt_p'
          description: Statistic used to determine winners.
      required:
        - campaignId
        - roundsDuration
        - numOfRounds
        - numOfWinners
        - winningCriteriaCode

    Game:
      allOf:
        - $ref: '#/components/schemas/DraftGame'
      type: object
      description: Represents a game with its rounds, status, and related information.
      properties:
        id:
          type: string
          example: '12345'
        status:
          $ref: '#/components/schemas/GameStatus'
        currentRoundId:
          type: string
          example: 'r12345'
        currentRoundIndex:
          type: number
          example: 1
        currentLeaderboardId:
          type: string
          example: 'l12345'
        nextRoundStartsAt:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00.000Z'
        createdAt:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00.000Z'
        updatedAt:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00.000Z'
      required:
        - campaignId
        - id
        - status

    Score:
      type: object
      description: Represents a score achieved by a user in a particular round of a game.
      properties:
        id:
          type: string
          example: 's12345'
        points:
          type: number
          example: 150
        userId:
          type: string
          example: 'u12345'
        roundId:
          type: string
          example: 'r12345'
      required:
        - id
        - points
        - userId
        - roundId

    Round:
      type: object
      description: Represents a round within a game with its index and related information.
      properties:
        gameId:
          type: string
          example: 'g12345'
        id:
          type: string
          example: 'r12345'
        index:
          type: number
          example: 1
      required:
        - gameId
        - id
        - index

    Leaderboard:
      type: object
      description: Represents a leaderboard for a game showcasing top performers based on a specific statistic.
      properties:
        id:
          type: string
          example: 'l12345'
        roundId:
          type: string
          example: 'r12345'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/LeaderboardEntry'
      required:
        - id
        - roundId
        - entries

    LeaderboardEntry:
      type: object
      description: Represents a participant on a leaderboard.
      properties:
        userId:
          type: string
          example: 'u12345'
        rank:
          type: number
          example: 3
        isWinning:
          type: boolean
          example: true
        score:
          type: number
          example: 150
        prevRoundScore:
          type: number
          example: 100
        stats:
          type: object
          properties:
            percentChange:
              type: number
              example: 50
            absoluteChange:
              type: number
              example: 50
          required:
            - percentChange
            - absoluteChange
      required:
        - userId
        - rank
        - isWinning
        - score
        - prevRoundScore
        - stats
paths:
  /games/{id}:
    get:
      tags:
        - Game
      summary: Get game details by ID
      operationId: getGameById
      parameters:
        - name: id
          in: path
          description: Game ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Game details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        404:
          description: Game not found
        500:
          description: Internal server error

  /games/{id}/rounds/new:
    post:
      tags:
        - Game
      summary: Start a new round for the game
      operationId: nextRound
      parameters:
        - name: id
          in: path
          description: Game ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: New round started successfully
        400:
          description: Invalid request
        500:
          description: Internal server error

  /games/{id}/start:
    post:
      tags:
        - Game
      summary: Start the game
      operationId: startGame
      parameters:
        - name: id
          in: path
          description: Game ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Game started successfully
        400:
          description: Invalid request
        500:
          description: Internal server error

  /games:
    post:
      tags:
        - Game
      summary: Create a new game
      operationId: createGame
      requestBody:
        description: Game details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftGame'
      responses:
        200:
          description: Game created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        400:
          description: Invalid request
        500:
          description: Internal server error

  /games/{id}/end:
    put:
      tags:
        - Game
      summary: End the game
      operationId: endGame
      parameters:
        - name: id
          in: path
          description: Game ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Game ended successfully
        400:
          description: Invalid request
        500:
          description: Internal server error

  /games/{id}/rounds/end:
    put:
      tags:
        - Game
      summary: End the current round of the game
      operationId: endRound
      parameters:
        - name: id
          in: path
          description: Game ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Current round ended successfully
        400:
          description: Invalid request
        500:
          description: Internal server error

  /games/periodic-updates:
    post:
      tags:
        - Game
      summary: Periodically update game statuses
      operationId: updateGameStatuses
      responses:
        200:
          description: Game statuses updated successfully
        500:
          description: Internal server error

  /leaderboards/{roundId}/top/{n}:
    get:
      tags:
        - Leaderboard
      summary: Get the top N participants for a specific round
      operationId: getTopParticipants
      parameters:
        - name: roundId
          in: path
          description: ID of the round
          required: true
          schema:
            type: string
        - name: n
          in: path
          description: Number of top participants to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: List of top N participants for the round
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeaderboardEntry'
        404:
          description: Round not found
        500:
          description: Internal server error

  /leaderboards/{roundId}:
    get:
      tags:
        - Leaderboard
      summary: Get the leaderboard for a specific round
      operationId: getLeaderboard
      parameters:
        - name: roundId
          in: path
          description: ID of the round
          required: true
          schema:
            type: string
      responses:
        200:
          description: Leaderboard details for the round
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leaderboard'
        404:
          description: Round not found
        500:
          description: Internal server error
